(ns aoc.ocr
  (:require
   [clojure.string :as str]))

(defn draw [points]
  (let [width (->> points (map first) (apply max) inc)
        height (->> points (map second) (apply max) inc)]
    (->> (range height)
         (map (fn [y]
                (apply str (map (fn [x] (if (points [x y]) \# \.))
                                (range width)))))
         (interpose "\n")
         (apply str))))

(def parse
  (update-keys
   {".##..####.#....####.#.....##..#...#####..##...###
     #..#.#....#....#....#....#..#.#...##....#..#.#...
     #....###..#....###..#....#..#..#.#.###..#....#...
     #....#....#....#....#....#..#...#..#....#.....##.
     #..#.#....#....#....#....#..#...#..#....#..#....#
     .##..#....####.####.####..##....#..#.....##..###."
    "CFLELOYFCS"
    "###..####.#..#.###...##....##.####.#..#
     #..#.#....#.#..#..#.#..#....#....#.#..#
     ###..###..##...#..#.#.......#...#..#..#
     #..#.#....#.#..###..#.......#..#...#..#
     #..#.#....#.#..#.#..#..#.#..#.#....#..#
     ###..#....#..#.#..#..##...##..####..##."
    "BFKRCJZU"
    "###..#..#.###..####.#..#.
     #..#.#..#.#..#.#....#..#.
     #..#.####.#..#.###..#..#.
     ###..#..#.###..#....#..#.
     #....#..#.#....#....#..#.
     #....#..#.#....####..##.."
    "PHPEU"}
   #(str/replace % " " "")))
